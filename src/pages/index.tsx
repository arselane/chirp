import { type NextPage } from "next";
import { useUser } from "@clerk/nextjs";
import { SignInButton } from "@clerk/clerk-react";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

import Head from "next/head";
import dayjs from "dayjs"
import relativeTime from "dayjs/plugin/relativeTime"
import Image from "next/image";
import { LoadingPage } from "~/components/Loading";

dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user } = useUser();

  console.log(user);

  if (!user) return null;

  return (
    <div className="flex w-full gap-3 ">
      <Image
        src={user.profileImageUrl}
        alt="Profile image"
        width={56}
        height={56}
        className="w-14 h-14 rounded-full"
      />
      <input placeholder="Type some emojis!" className="bg-transparent grow outline-none" />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex gap-3 p-4 border-b border-slate-400">
      <Image
        src={author.profileImageUrl}
        alt="Profile image"
        width={56}
        height={56}
        className="w-14 h-14 rounded-full"
      />
      <div className="flex flex-col">
        <div className="flex text-slate-300">
          <p>
            {`@${author.username}`}
            <span className="font-thin">{` â€¢ ${dayjs(post.createdAt).fromNow()}`}</span>
          </p>
        </div>
        <span className="text-2xl">{post.content}</span>
      </div>
    </div>
  )
}

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingPage />
  if (!data) return <div>Something went wrong</div>

  return (
    <div className="flex flex-col">
      {[...data, ...data]?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  )
}

const Home: NextPage = () => {
  const { isLoaded: userLoaded, isSignedIn } = useUser();
  // Start fetching asap
  api.posts.getAll.useQuery();

  //Returns an empty div if user is not logged in
  if (!userLoaded) return <div />


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full h-full border-x border-slate-400 md:max-w-2xl bg-sky-500">
          <div className="flex border-b border-slate-400 p-4">
            {!isSignedIn && <div className="flex justify-center"><SignInButton /></div>}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
